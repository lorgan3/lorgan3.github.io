var ct=Object.defineProperty;var lt=(H,L,m)=>L in H?ct(H,L,{enumerable:!0,configurable:!0,writable:!0,value:m}):H[L]=m;var v=(H,L,m)=>(lt(H,typeof L!="symbol"?L+"":L,m),m);(function(){"use strict";const H=t=>t.constructor.scale;function L(t){return t?"getTile"in t:!1}var m=(t=>(t[t.Unknown=0]="Unknown",t[t.Player=1]="Player",t[t.Enemy=2]="Enemy",t))(m||{}),I=(t=>(t[t.None=0]="None",t[t.Tower=1]="Tower",t[t.Slime=2]="Slime",t[t.Base=3]="Base",t[t.Bullet=4]="Bullet",t[t.Wall=5]="Wall",t[t.Mortar=6]="Mortar",t[t.Flamethrower=7]="Flamethrower",t[t.Flame=8]="Flame",t[t.Railgun=9]="Railgun",t[t.Rail=10]="Rail",t[t.ElectricFence=11]="ElectricFence",t[t.Fence=12]="Fence",t[t.Freezer=13]="Freezer",t[t.Tree=14]="Tree",t[t.Stump=15]="Stump",t[t.Rock=16]="Rock",t[t.Radar=17]="Radar",t[t.PowerPlant=18]="PowerPlant",t[t.Blueprint=19]="Blueprint",t[t.Shockwave=20]="Shockwave",t[t.Armory=21]="Armory",t[t.Market=22]="Market",t[t.SpeedBeacon=23]="SpeedBeacon",t[t.Runner=24]="Runner",t[t.DamageBeacon=25]="DamageBeacon",t[t.Laser=26]="Laser",t[t.LaserBeam=27]="LaserBeam",t[t.Flier=28]="Flier",t[t.Tank=29]="Tank",t[t.Rocket=30]="Rocket",t[t.WavePoint=31]="WavePoint",t[t.Barracks=32]="Barracks",t[t.Tesla=33]="Tesla",t[t.Spark=34]="Spark",t[t.Excavator=35]="Excavator",t[t.Convert=36]="Convert",t[t.Terraform=37]="Terraform",t[t.EmergencyRecharge=38]="EmergencyRecharge",t[t.EmergencyRepair=39]="EmergencyRepair",t))(I||{});[...new Set([3,17,18,21,22,32])];var O=(t=>(t[t.Undiscovered=0]="Undiscovered",t[t.Pending=1]="Pending",t[t.Discovered=2]="Discovered",t))(O||{}),u=(t=>(t[t.Void=0]="Void",t[t.Grass=1]="Grass",t[t.Stone=2]="Stone",t[t.Water=3]="Water",t[t.Obstructed=4]="Obstructed",t[t.Wall=5]="Wall",t[t.Spore=6]="Spore",t[t.ElectricFence=7]="ElectricFence",t[t.Fence=8]="Fence",t[t.Freezer=9]="Freezer",t[t.Bridge=10]="Bridge",t[t.Dirt=11]="Dirt",t[t.Snow=12]="Snow",t[t.Sand=13]="Sand",t[t.Ice=14]="Ice",t[t.PlayerBuilding=15]="PlayerBuilding",t[t.Tree=16]="Tree",t[t.Rock=17]="Rock",t[t.Base=18]="Base",t))(u||{}),N=(t=>(t[t.WaterAlt=19]="WaterAlt",t[t.WaterStill=20]="WaterStill",t[t.GrassFlower=21]="GrassFlower",t[t.GrassAlt=22]="GrassAlt",t[t.GrassPlain=23]="GrassPlain",t[t.SandAlt=24]="SandAlt",t[t.SnowAlt=25]="SnowAlt",t[t.IceAlt=26]="IceAlt",t[t.Static1=27]="Static1",t[t.Static2=28]="Static2",t[t.Static3=29]="Static3",t))(N||{});const q={[19]:3,[20]:3,[21]:1,[22]:1,[23]:1,[24]:13,[25]:12,[26]:14,[27]:0,[28]:0,[29]:0},J=new Set([1,2,11,13,12]);[...new Set([...J,3,14,10,16,17])];const K={[I.Tower]:4,[I.Wall]:5,[I.Mortar]:4,[I.Flamethrower]:4,[I.Railgun]:4,[I.ElectricFence]:7,[I.Fence]:8,[I.Freezer]:9,[I.Radar]:18,[I.PowerPlant]:18,[I.Tree]:16,[I.Rock]:17,[I.Armory]:18,[I.Base]:18,[I.Market]:18,[I.SpeedBeacon]:4,[I.DamageBeacon]:4,[I.Laser]:4,[I.Barracks]:18,[I.Tesla]:4};class E{constructor(e,s,i=u.Void){v(this,"staticEntity",null);v(this,"hash");v(this,"actualType");v(this,"type");v(this,"towers",[]);v(this,"linkedAgents");v(this,"discoveryStatus",O.Undiscovered);this.x=e,this.y=s,this.altType=i,this.hash=`[${this.x}, ${this.y}]`,this.type=q[i]??i,this.actualType=this.type}serialize(){return{x:this.x,y:this.y,type:this.type}}getX(){return this.x}getY(){return this.y}getBaseType(){return this.type}getAltType(){return this.altType}getAnimation(){return this.type===u.Water?[u.Water,N.WaterAlt,N.WaterStill]:[this.altType]}getType(){return this.actualType}getStaticEntity(){return this.staticEntity}hasStaticEntity(){return this.staticEntity!==null}setStaticEntity(e){if(e===this.staticEntity)return;if(this.staticEntity!==null)throw new Error("A tile can only have 1 static entity.");const s=e.getAgent();L(s)&&s.getTile().getHash()===this.getHash()&&(s.updateTile(this),this.linkedAgents&&s.updateLinkedAgents&&s.updateLinkedAgents(this.linkedAgents)),this.staticEntity=e,this.actualType=K[e.getAgent().getType()]||this.type}clearStaticEntity(){this.staticEntity=null,this.actualType=this.type}isStaticEntityRoot(){var e;return((e=this.staticEntity)==null?void 0:e.getAgent().getTile())===this}addTower(e){this.towers.includes(e)||this.towers.push(e)}setDiscoveryStatus(e){this.discoveryStatus=e}isDiscovered(){return this.discoveryStatus===O.Discovered}getDiscoveryStatus(){return this.discoveryStatus}isCoveredByTower(){return this.isDiscovered()&&this.towers.length>0}removeTower(e){this.towers.splice(this.towers.indexOf(e),1)}getAvailableTowers(){return this.towers.filter(e=>e.getCooldown()<=0)}getTowers(){return this.towers}addLinkedAgent(e){var i;this.linkedAgents||(this.linkedAgents=new Set),this.linkedAgents.add(e);const s=(i=this.staticEntity)==null?void 0:i.getAgent();s&&s.updateLinkedAgents&&s.updateLinkedAgents(this.linkedAgents)}removeLinkedAgent(e){var i;if(!this.linkedAgents)return;this.linkedAgents.delete(e);const s=(i=this.staticEntity)==null?void 0:i.getAgent();L(s)&&s.updateLinkedAgents&&s.updateLinkedAgents(this.linkedAgents)}getLinkedAgents(){return this.linkedAgents}getHash(){return this.hash}sync(e){this.towers=e.towers,this.discoveryStatus=e.discoveryStatus}}var V=(t=>(t[t.StatUpdate=0]="StatUpdate",t[t.SurfaceChange=1]="SurfaceChange",t[t.BlackOut=2]="BlackOut",t[t.OpenBuildMenu=3]="OpenBuildMenu",t[t.CloseBuildMenu=4]="CloseBuildMenu",t[t.SelectPlaceable=5]="SelectPlaceable",t[t.ToggleShowCoverage=6]="ToggleShowCoverage",t[t.StartWave=7]="StartWave",t[t.EndWave=8]="EndWave",t[t.Unlock=9]="Unlock",t[t.Discover=10]="Discover",t[t.Spawn=11]="Spawn",t[t.Buy=12]="Buy",t[t.Sell=13]="Sell",t[t.HitBase=14]="HitBase",t[t.Lose=15]="Lose",t))(V||{});const X=class{constructor(){v(this,"eventHandlers");X.instance=this,this.eventHandlers=new Map}addEventListener(e,s){return this.eventHandlers.has(e)?this.eventHandlers.get(e).add(s):this.eventHandlers.set(e,new Set([s])),()=>this.removeEventListener(e,s)}addEventListeners(e,s){const i=e.map(r=>this.addEventListener(r,s));return()=>i.forEach(r=>r())}removeEventListener(e,s){var i;(i=this.eventHandlers.get(e))==null||i.delete(s)}triggerEvent(e,...s){var i;(i=this.eventHandlers.get(e))==null||i.forEach(r=>r(...s))}static get Instance(){return this.instance}};let W=X;v(W,"instance");function $(t){return"getCooldown"in t}const Q=t=>t.constructor.range,j=[[1,0],[-1,0],[0,1],[0,-1]],Z=[...j,[1,1],[-1,-1],[-1,1],[1,-1]];class G{constructor(e){v(this,"map");v(this,"entities",[]);v(this,"deletedEntities",[]);v(this,"tickingEntities",[]);v(this,"entitiesMap",new Map);v(this,"towers",new Set);v(this,"width");v(this,"height");v(this,"dirty",!1);v(this,"changedTiles",new Set);v(this,"addedAgents",new Set);v(this,"removedAgents",new Set);this.width=e.width,this.height=e.height;const s="buffer"in e?e.buffer:e.generate;this.initialize(s??((i,r)=>new E(i,r)))}serialize(){const e=new Uint8Array(this.map.length*3);for(let s=0;s<this.map.length;s++){const i=this.map[s],r=s*3;e[r]=i.getX(),e[r+1]=i.getY(),e[r+2]=i.getType()}return{width:this.width,height:this.height,buffer:e}}initialize(e){if(this.entities=[],this.deletedEntities=[],this.entitiesMap.clear(),Object.values(m).filter(s=>typeof s!="string").forEach(s=>this.entitiesMap.set(s,new Set)),this.map=new Array(this.width*this.height),e instanceof Uint8Array)for(let s=0;s<this.map.length;s++){const i=s*3;this.map[s]=new E(e[i],e[i+1],e[i+2])}else{const s=[];for(let i=0;i<this.height;i++)for(let r=0;r<this.width;r++){const h=e(r,i);this.map[i*this.width+r]=h,h.hasStaticEntity()&&s.push(h.getStaticEntity())}for(let i of s)this.spawnStatic(i.getAgent())}}getTile(e,s,i=!1){return e>=this.width||e<0||s>=this.height||s<0?i?this.getTile(Math.max(Math.min(e,this.width-1),0),Math.max(Math.min(s,this.height-1),0)):void 0:this.map[s*this.width+e]}getEntityTiles(e,s,i){let r;if(s)r=e;else{const h=e;r=h.getTile().getX(),s=h.getTile().getY(),i=H(h)}switch(i){case 1:return[this.map[s*this.width+r]];case 2:return[this.map[s*this.width+r],this.map[s*this.width+r+1],this.map[(s+1)*this.width+r],this.map[(s+1)*this.width+r+1]];default:throw new Error("Unsupported agent scale!")}}getAdjacentTiles(e,s=1,i=!1){return(i?Z:j).map(([r,h])=>this.getTile(e.getX()+r*s,e.getY()+h*s)).filter(r=>!!r)}setTile(e){this.setTileInternal(e)}setTiles(e){e.map(s=>this.setTileInternal(s))}setTileInternal(e){this.dirty=!0;const s=this.map[e.getY()*this.width+e.getX()];return s.hasStaticEntity()&&!e.hasStaticEntity()?e.setStaticEntity(s.getStaticEntity()):s.hasStaticEntity()&&this.despawnStatic(s.getStaticEntity().getAgent()),e.sync(s),this.map[e.getY()*this.width+e.getX()]=e,this.changedTiles.add(s),s}processChangedTiles(){this.changedTiles.size&&(W.Instance.triggerEvent(V.SurfaceChange,{affectedTiles:this.changedTiles,addedStaticAgents:this.addedAgents,removedStaticAgents:this.removedAgents}),this.changedTiles.clear(),this.addedAgents.clear(),this.removedAgents.clear())}getRow(e){const s=e*this.width;return this.map.slice(s,s+this.width)}getColumn(e){const s=new Array(this.height);for(let i=0;i<this.height;i++)s[i]=this.getTile(e,i);return s}getWidth(){return this.width}getHeight(){return this.height}forLine(e,s,i,r,h,d){const c=(d==null?void 0:d.scale)??1;e=Math.floor(e/c)*c,s=Math.floor(s/c)*c,i=Math.floor(i/c)*c,r=Math.floor(r/c)*c;const g=Math.atan2(r-s,i-e);return this.forRay(e,s,g,(S,f)=>!(h(S,f)===!1)&&!(S.getX()===i&&S.getY()===r),d)}forRay(e,s,i,r,h){const d=(h==null?void 0:h.connected)??!1,c=(h==null?void 0:h.scale)??1,g=Math.cos(i),S=Math.sin(i),f=Math.abs(g)+Math.abs(S);let M=Math.abs(g/f),A=Math.abs(S/f),p=(1+(M>A?A/M:M/A))*c;M*=p*Math.sign(g),A*=p*Math.sign(S);let F,B,x=0;for(;;){let n=!1;const o=Math.round(e/c)*c;let l=Math.round(s/c)*c;d&&F!==void 0&&Math.round(F/c)*c!==o&&Math.round(B/c)*c!==l&&(l=Math.round(B),n=!0);const a=this.getTile(o,l);if(!a||!r(a,x))break;n||(e+=M,s+=A),F=o,B=l,x++}}forRect(e,s,i,r,h,d){const c=(d==null?void 0:d.scale)??1;e=Math.floor(e/c)*c,s=Math.floor(s/c)*c,i=Math.floor(i/c)*c,r=Math.floor(r/c)*c;const g=(f,M)=>{const A=this.getTile(f,M);A&&h(A)},S=f=>{if(i>e)for(let M=e;M<=i;M+=c)g(M,f);else for(let M=e;M>=i;M-=c)g(M,f)};if(r>s)for(let f=s;f<=r;f+=c)S(f);else for(let f=s;f>=r;f-=c)S(f)}forCircle(e,s,i,r,h){const d=(h==null?void 0:h.edgeOnly)??!1,c=(h==null?void 0:h.scale)??1;e=Math.floor(e/c),s=Math.floor(s/c);let g=i/2;const S=g*g,f=(g-1)*(g-1),M=(A,p,F=0)=>{const B=A+F,x=p+F,n=B*B+x*x;if(n<S&&!(d&&n<f)){const o=this.getTile((e+A)*c,(s+p)*c,d);o&&r(o)}};if(i%2===0)for(let A=-g;A<g;A+=1)for(let p=-g;p<g;p+=1)M(p,A,.5);else{g=g|0;for(let A=-g;A<g+1;A+=1)for(let p=-g;p<g+1;p+=1)M(p,A)}}spawn(e){this.entities.push(e.entity),this.entitiesMap.get(e.category).add(e.entity),e.tick?this.tickingEntities.push(e.entity):this.dirty=!0,e.spawn&&e.spawn()}spawnStatic(e){this.getEntityTiles(e).forEach(i=>{i.setStaticEntity(e.entity),this.changedTiles.add(i)}),this.addedAgents.add(e),this.spawn(e),this.dirty=!0,$(e)&&Q(e)>1&&this.towers.add(e)}despawn(e){const s=this.entities.indexOf(e.entity);s>=0&&(this.entities.splice(s,1),e.tick&&this.tickingEntities.splice(this.tickingEntities.indexOf(e.entity),1));const i=this.entitiesMap.get(e.category).delete(e.entity);return this.deletedEntities.push(e.entity),e.despawn&&e.despawn(),i}despawnStatic(e){this.getEntityTiles(e).forEach(i=>{i.clearStaticEntity(),this.changedTiles.add(i)}),this.removedAgents.add(e),this.despawn(e),this.dirty=!0,$(e)&&this.towers.delete(e)}getEntities(){return this.entities}getTickingEntities(){return this.tickingEntities}getEntitiesForCategory(e){return this.entitiesMap.get(e)}getDeletedEntities(){return this.deletedEntities}getTowers(){return this.towers}getTiles(){return this.map}markPristine(){this.dirty=!1,this.deletedEntities=[]}forceRerender(){this.dirty=!0}isDirty(){return this.dirty}}var T=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function y(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}var U={},tt={get exports(){return U},set exports(t){U=t}},z={},et={get exports(){return z},set exports(t){z=t}};(function(t,e){(function(){var s,i,r,h,d,c,g,S,f,M,A,p,F,B,x;r=Math.floor,M=Math.min,i=function(n,o){return n<o?-1:n>o?1:0},f=function(n,o,l,a,k){var w;if(l==null&&(l=0),k==null&&(k=i),l<0)throw new Error("lo must be non-negative");for(a==null&&(a=n.length);l<a;)w=r((l+a)/2),k(o,n[w])<0?a=w:l=w+1;return[].splice.apply(n,[l,l-l].concat(o)),o},c=function(n,o,l){return l==null&&(l=i),n.push(o),B(n,0,n.length-1,l)},d=function(n,o){var l,a;return o==null&&(o=i),l=n.pop(),n.length?(a=n[0],n[0]=l,x(n,0,o)):a=l,a},S=function(n,o,l){var a;return l==null&&(l=i),a=n[0],n[0]=o,x(n,0,l),a},g=function(n,o,l){var a;return l==null&&(l=i),n.length&&l(n[0],o)<0&&(a=[n[0],o],o=a[0],n[0]=a[1],x(n,0,l)),o},h=function(n,o){var l,a,k,w,C,R;for(o==null&&(o=i),w=function(){R=[];for(var D=0,b=r(n.length/2);0<=b?D<b:D>b;0<=b?D++:D--)R.push(D);return R}.apply(this).reverse(),C=[],a=0,k=w.length;a<k;a++)l=w[a],C.push(x(n,l,o));return C},F=function(n,o,l){var a;if(l==null&&(l=i),a=n.indexOf(o),a!==-1)return B(n,0,a,l),x(n,a,l)},A=function(n,o,l){var a,k,w,C,R;if(l==null&&(l=i),k=n.slice(0,o),!k.length)return k;for(h(k,l),R=n.slice(o),w=0,C=R.length;w<C;w++)a=R[w],g(k,a,l);return k.sort(l).reverse()},p=function(n,o,l){var a,k,w,C,R,D,b,_,Y;if(l==null&&(l=i),o*10<=n.length){if(w=n.slice(0,o).sort(l),!w.length)return w;for(k=w[w.length-1],b=n.slice(o),C=0,D=b.length;C<D;C++)a=b[C],l(a,k)<0&&(f(w,a,0,null,l),w.pop(),k=w[w.length-1]);return w}for(h(n,l),Y=[],R=0,_=M(o,n.length);0<=_?R<_:R>_;0<=_?++R:--R)Y.push(d(n,l));return Y},B=function(n,o,l,a){var k,w,C;for(a==null&&(a=i),k=n[l];l>o;){if(C=l-1>>1,w=n[C],a(k,w)<0){n[l]=w,l=C;continue}break}return n[l]=k},x=function(n,o,l){var a,k,w,C,R;for(l==null&&(l=i),k=n.length,R=o,w=n[o],a=2*o+1;a<k;)C=a+1,C<k&&!(l(n[a],n[C])<0)&&(a=C),n[o]=n[a],o=a,a=2*o+1;return n[o]=w,B(n,R,o,l)},s=function(){n.push=c,n.pop=d,n.replace=S,n.pushpop=g,n.heapify=h,n.updateItem=F,n.nlargest=A,n.nsmallest=p;function n(o){this.cmp=o??i,this.nodes=[]}return n.prototype.push=function(o){return c(this.nodes,o,this.cmp)},n.prototype.pop=function(){return d(this.nodes,this.cmp)},n.prototype.peek=function(){return this.nodes[0]},n.prototype.contains=function(o){return this.nodes.indexOf(o)!==-1},n.prototype.replace=function(o){return S(this.nodes,o,this.cmp)},n.prototype.pushpop=function(o){return g(this.nodes,o,this.cmp)},n.prototype.heapify=function(){return h(this.nodes,this.cmp)},n.prototype.updateItem=function(o){return F(this.nodes,o,this.cmp)},n.prototype.clear=function(){return this.nodes=[]},n.prototype.empty=function(){return this.nodes.length===0},n.prototype.size=function(){return this.nodes.length},n.prototype.clone=function(){var o;return o=new n,o.nodes=this.nodes.slice(0),o},n.prototype.toArray=function(){return this.nodes.slice(0)},n.prototype.insert=n.prototype.push,n.prototype.top=n.prototype.peek,n.prototype.front=n.prototype.peek,n.prototype.has=n.prototype.contains,n.prototype.copy=n.prototype.clone,n}(),function(n,o){return t.exports=o()}(this,function(){return s})}).call(T)})(et),function(t){t.exports=z}(tt);var st=y(U);class P{constructor(e,s,i,r,h,d=[]){v(this,"index",0);v(this,"sectionIndex",0);v(this,"tileSet");this.pathfinder=e,this.tiles=s,this.sections=i,this.speed=r,this.costs=h,this.checkpoints=d,this.tileSet=new Set(s)}performStep(e,s){const i=this.index%1,r=this.index|0,h=this.tiles[r],d=this.speed*s/(this.costs[r]??1);let c=this.index+d|0;r===c&&c++,c>=this.tiles.length-1&&(c=this.tiles.length-1);const g=this.tiles[c];for(;this.checkpoints.length>0;){const f=this.checkpoints[0];if(f&&c>=f.index)if(f.isCleared(this.tiles,e))this.checkpoints.shift();else return this.index=f.index-1,{from:this.tiles[this.index],to:g,step:0};else break}const S=this.costs[c]??1;for(this.index=Math.min(this.index+this.speed*s/S,this.tiles.length-1);this.index>this.sections[this.sectionIndex].to;)this.sectionIndex++;return{from:h,to:g,step:i}}getFuturePosition(e){let s=this.index,i=this.sectionIndex;for(;e>0;){const r=this.sections[i],h=r.to-s,d=h/this.speed*r.cost;if(e>d?(s+=h,i++,e-=d):(s+=h*e/d,e=0),s>=this.tiles.length-1)return this.tiles.length-1}return s}fastForward(e){let s=this.checkpoints[0];for(let i=(this.index|0)+1;i<this.tiles.length;i++){if(s&&i>=s.index)if(s.isCleared(this.tiles,e))this.checkpoints.shift(),s=this.checkpoints[0];else break;if(this.getTile(i).isDiscovered())break;this.index=i}}clone(){return new P(this.pathfinder,this.tiles,this.sections,this.speed,this.costs,[...this.checkpoints])}slice(e=0,s=Number.MAX_VALUE){const i=this.tiles.slice(e,s),r=this.costs.slice(e,s),h=P.calculateSections(i,r),d=this.checkpoints.filter(c=>c.index>=e&&c.index<s);return new P(this.pathfinder,i,h,this.speed,r,d)}setIndex(e){this.index=Math.max(Math.min(e,this.tiles.length-1),0),this.sectionIndex=this.sections.findIndex(({from:s,to:i})=>this.index>=s&&this.index<i)}getIndex(){return this.index}getTile(e=this.index){return this.tiles[e|0]}getTiles(){return this.tiles}getLength(){return this.tiles.length}getCoordinates(e=this.index){if(e>=this.tiles.length-1){const h=this.tiles[this.tiles.length-1];return{x:h.getX(),y:h.getY()}}const s=e%1,i=this.tiles[e|0],r=this.tiles[(e|0)+1];return{x:(r.getX()-i.getX())*s+i.getX(),y:(r.getY()-i.getY())*s+i.getY()}}getSpeed(){return this.speed}setSpeed(e){this.speed=e}isDone(){return this.index===this.tiles.length-1}isPaused(e){if(this.isDone())return!0;const s=this.getNextCheckpoint();return s&&s.index===this.index+1&&!s.isCleared(this.tiles,e)}getNextCheckpoint(){return this.checkpoints[0]||null}getCheckpoints(){return this.checkpoints}setCheckpoints(e){this.checkpoints=e}getCurrentTile(){return this.tiles[this.index|0]}recompute(){const e=this.pathfinder.getSurface();let s;for(let i=0;i<this.tiles.length;i++){const r=this.tiles[i],h=e.getTile(r.getX(),r.getY());this.tiles[i]=h,this.costs[i]=this.pathfinder.getCost(h,s)??1,s=h,r!==h&&(this.tileSet.delete(r),this.tileSet.add(h))}this.sections=P.calculateSections(this.tiles,this.costs)}isAffectedByTiles(e){for(let s of e)if(this.tileSet.has(s))return!0;return!1}static calculateSections(e,s){return e.reduce((i,r,h)=>{const d=i[i.length-1],c=s[h];return d?(d.cost===c?d.to++:i.push({from:h,to:h+1,cost:c}),i):[{from:h,to:h+1,cost:c}]},[])}static fromTiles(e,s,i=1){const r=new P(e,s,[],i,[]);return r.recompute(),r}static fromMapAndCosts(e,s,i,r,h=1){let d=i;const c=[d];for(;d!==s;)d=r.get(d.getHash()),c.push(d);return this.fromTiles(e,c.reverse(),h)}}const it={[u.Grass]:3,[u.Water]:20,[u.Stone]:4,[u.Wall]:3,[u.Spore]:2,[u.ElectricFence]:5,[u.Fence]:20,[u.Freezer]:6,[u.Obstructed]:3,[u.Bridge]:5,[u.Dirt]:2.5,[u.Sand]:3.5,[u.Snow]:3.5,[u.Ice]:10,[u.PlayerBuilding]:3,[u.Tree]:5,[u.Rock]:5,[u.Base]:Number.EPSILON},nt={[u.Fence]:5,[u.ElectricFence]:40,[u.Wall]:500,[u.Freezer]:.5,[u.Obstructed]:500,[u.PlayerBuilding]:-10};u.Grass+"",u.Water+"",u.Stone+"",u.Wall+"",u.Spore+"",u.ElectricFence+"",u.Fence+"",u.Freezer+"",u.Obstructed+"",u.Bridge+"",u.Dirt+"",u.Sand+"",u.Snow+"",u.Ice+"",u.PlayerBuilding+"",u.Tree+"",u.Rock+"",u.Base+"",Number.EPSILON,u.Fence+"",u.ElectricFence+"",u.Wall+"",u.Tree+"",u.Rock+"",u.Obstructed+"",u.PlayerBuilding+"";const rt=[[0,-1],[-1,0],[1,0],[0,1],[-1,-1],[1,-1],[-1,1],[1,1]],ht=150;class ot{constructor(e,s=nt,i=it){this.surface=e,this.costMultipliers=s,this.costs=i}getPath(e,s,i){const r=i??(p=>this.costMultipliers[p.getType()]??1),h=new Set,c=(this.costs[e.getType()]??1)*r(e),g=new Map;g.set(e.getHash(),c);const S=new Map;S.set(e.getHash(),c);const f=new Map;f.set(e.getHash(),c+this.heuristic(e,s));const M=new st((p,F)=>(f.get(p.getHash())??1/0)-(f.get(F.getHash())??1/0));M.push(e);const A=new Map;for(;!M.empty();){let p=M.pop();if(s===p)return P.fromMapAndCosts(this,e,s,A);const F=p.getHash(),B=rt.map(([n,o])=>this.surface.getTile(n+p.getX(),o+p.getY())),x=[];this.setCostAndMultiplier(0,x,r,B[0]),this.setCostAndMultiplier(1,x,r,B[1]),this.setCostAndMultiplier(2,x,r,B[2]),this.setCostAndMultiplier(3,x,r,B[3]),this.setDiagonalCostAndMultiplier(4,0,1,x,r,B[4]),this.setDiagonalCostAndMultiplier(5,0,2,x,r,B[5]),this.setDiagonalCostAndMultiplier(6,1,3,x,r,B[6]),this.setDiagonalCostAndMultiplier(7,2,3,x,r,B[7]),B.forEach((n,o)=>{if(!n)return;const l=x[o*2];if(!l||h.has(n))return;const a=n.getHash(),k=S.get(F)+x[o*2+1];if(k<(S.get(a)??1/0)){const w=g.get(F)+l;g.set(a,w),A.set(a,p),S.set(a,k),f.set(a,k+this.heuristic(n,s)),M.push(n),h.add(p)}})}}getHivePath(e,s){const i={},r=h=>(i[h.getHash()]??1)*(this.costMultipliers[h.getType()]??1);return e.reduce((h,d,c)=>{const g=this.getPath(d,s,r);return h.push(g),g&&e.length>c-1&&g.getTiles().forEach(S=>{S.hasStaticEntity()&&(i[S.getHash()]=.85),i[S.getHash()]=i[S.getHash()]+.1||1.1}),h},[])}getCost(e,s){const i=c=>this.costs[c.getType()]??null;if(!s)return i(e);const r=i(e),h=i(s);if(!r||!h)return null;const d=(r+h)/2;return!r||!h||e.getX()===s.getX()||e.getY()==s.getY()?d:d+(i(this.surface.getTile(e.getX(),s.getY()))+i(this.surface.getTile(s.getX(),e.getY())))/4}getSurface(){return this.surface}heuristic(e,s){return Math.abs(e.getX()-s.getX())+Math.abs(e.getY()-s.getY())}setCostAndMultiplier(e,s,i,r){if(!r)return;const h=this.costs[r.getType()];h&&(s[e*2]=h,s[e*2+1]=h*i(r))}setDiagonalCostAndMultiplier(e,s,i,r,h,d){if(!d||!r[s*2]||!r[i*2])return;const c=r[s*2+1]+r[i*2+1];if(c>ht)return;const g=this.costs[d.getType()];g&&(r[e*2]=g+(r[s*2]+r[i*2])/4,r[e*2+1]=g*h(d)+c/4)}}onmessage=({data:{width:t,height:e,buffer:s,costMultiplier:i,costs:r,startPoints:h,target:d}})=>{const c=new G({width:t,height:e,buffer:new Uint8Array(s)}),g=new ot(c,i,r),S=h.map(({x:p,y:F})=>c.getTile(p,F)),f=c.getTile(d.x,d.y),A=g.getHivePath(S,f).filter(p=>!!p).map(p=>p.getTiles().map(F=>F.serialize()));postMessage(A)}})();
