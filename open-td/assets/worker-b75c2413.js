var ct=Object.defineProperty;var lt=(H,R,L)=>R in H?ct(H,R,{enumerable:!0,configurable:!0,writable:!0,value:L}):H[R]=L;var M=(H,R,L)=>(lt(H,typeof R!="symbol"?R+"":R,L),L);(function(){"use strict";const H=t=>t.constructor.scale;function R(t){return t?"getTile"in t:!1}var L=(t=>(t[t.Unknown=0]="Unknown",t[t.Player=1]="Player",t[t.Enemy=2]="Enemy",t))(L||{}),m=(t=>(t[t.None=0]="None",t[t.Tower=1]="Tower",t[t.Slime=2]="Slime",t[t.Base=3]="Base",t[t.Bullet=4]="Bullet",t[t.Wall=5]="Wall",t[t.Mortar=6]="Mortar",t[t.Flamethrower=7]="Flamethrower",t[t.Flame=8]="Flame",t[t.Railgun=9]="Railgun",t[t.Rail=10]="Rail",t[t.ElectricFence=11]="ElectricFence",t[t.Fence=12]="Fence",t[t.Freezer=13]="Freezer",t[t.Tree=14]="Tree",t[t.Stump=15]="Stump",t[t.Rock=16]="Rock",t[t.Radar=17]="Radar",t[t.PowerPlant=18]="PowerPlant",t[t.Blueprint=19]="Blueprint",t[t.Shockwave=20]="Shockwave",t[t.Armory=21]="Armory",t[t.Market=22]="Market",t[t.SpeedBeacon=23]="SpeedBeacon",t[t.Runner=24]="Runner",t[t.DamageBeacon=25]="DamageBeacon",t[t.Laser=26]="Laser",t[t.LaserBeam=27]="LaserBeam",t[t.Flier=28]="Flier",t[t.Tank=29]="Tank",t[t.Rocket=30]="Rocket",t[t.WavePoint=31]="WavePoint",t[t.Barracks=32]="Barracks",t[t.Tesla=33]="Tesla",t[t.Spark=34]="Spark",t[t.Behemoth=35]="Behemoth",t[t.Bore=36]="Bore",t[t.Excavator=37]="Excavator",t[t.Convert=38]="Convert",t[t.Terraform=39]="Terraform",t[t.EmergencyRecharge=40]="EmergencyRecharge",t[t.EmergencyRepair=41]="EmergencyRepair",t))(m||{});[...new Set([3,17,18,21,22,32])];var O=(t=>(t[t.Undiscovered=0]="Undiscovered",t[t.Pending=1]="Pending",t[t.Discovered=2]="Discovered",t))(O||{}),d=(t=>(t[t.Void=0]="Void",t[t.Grass=1]="Grass",t[t.Stone=2]="Stone",t[t.Water=3]="Water",t[t.Obstructed=4]="Obstructed",t[t.Wall=5]="Wall",t[t.Spore=6]="Spore",t[t.ElectricFence=7]="ElectricFence",t[t.Fence=8]="Fence",t[t.Freezer=9]="Freezer",t[t.Bridge=10]="Bridge",t[t.Dirt=11]="Dirt",t[t.Snow=12]="Snow",t[t.Sand=13]="Sand",t[t.Ice=14]="Ice",t[t.PlayerBuilding=15]="PlayerBuilding",t[t.Tree=16]="Tree",t[t.Rock=17]="Rock",t[t.Base=18]="Base",t))(d||{}),N=(t=>(t[t.WaterAlt=19]="WaterAlt",t[t.WaterStill=20]="WaterStill",t[t.GrassFlower=21]="GrassFlower",t[t.GrassAlt=22]="GrassAlt",t[t.GrassPlain=23]="GrassPlain",t[t.SandAlt=24]="SandAlt",t[t.SnowAlt=25]="SnowAlt",t[t.IceAlt=26]="IceAlt",t[t.Static1=27]="Static1",t[t.Static2=28]="Static2",t[t.Static3=29]="Static3",t))(N||{});const K={[19]:3,[20]:3,[21]:1,[22]:1,[23]:1,[24]:13,[25]:12,[26]:14,[27]:0,[28]:0,[29]:0},J=new Set([1,2,11,13,12]);[...new Set([...J,3,14,10,16,17])];const Q={[m.Tower]:4,[m.Wall]:5,[m.Mortar]:4,[m.Flamethrower]:4,[m.Railgun]:4,[m.ElectricFence]:7,[m.Fence]:8,[m.Freezer]:9,[m.Radar]:18,[m.PowerPlant]:18,[m.Tree]:16,[m.Rock]:17,[m.Armory]:18,[m.Base]:18,[m.Market]:18,[m.SpeedBeacon]:4,[m.DamageBeacon]:4,[m.Laser]:4,[m.Barracks]:18,[m.Tesla]:4};class V{constructor(e,s,i=d.Void){M(this,"staticEntity",null);M(this,"hash");M(this,"actualType");M(this,"type");M(this,"towers",[]);M(this,"linkedAgents");M(this,"discoveryStatus",O.Undiscovered);this.x=e,this.y=s,this.altType=i,this.hash=`[${this.x}, ${this.y}]`,this.type=K[i]??i,this.actualType=this.type}serialize(){return{x:this.x,y:this.y,type:this.type}}getX(){return this.x}getY(){return this.y}getBaseType(){return this.type}getAltType(){return this.altType}getAnimation(){return this.type===d.Water?[d.Water,N.WaterAlt,N.WaterStill]:[this.altType]}getType(){return this.actualType}getStaticEntity(){return this.staticEntity}hasStaticEntity(){return this.staticEntity!==null}setStaticEntity(e){if(e===this.staticEntity)return;if(this.staticEntity!==null)throw new Error("A tile can only have 1 static entity.");const s=e.getAgent();R(s)&&s.getTile().getHash()===this.getHash()&&(s.updateTile(this),this.linkedAgents&&s.updateLinkedAgents&&s.updateLinkedAgents(this.linkedAgents)),this.staticEntity=e,this.actualType=Q[e.getAgent().getType()]||this.type}clearStaticEntity(){this.staticEntity=null,this.actualType=this.type}isStaticEntityRoot(){var e;return((e=this.staticEntity)==null?void 0:e.getAgent().getTile())===this}addTower(e){this.towers.includes(e)||this.towers.push(e)}setDiscoveryStatus(e){this.discoveryStatus=e}isDiscovered(){return this.discoveryStatus===O.Discovered}getDiscoveryStatus(){return this.discoveryStatus}isCoveredByTower(){return this.isDiscovered()&&this.towers.length>0}removeTower(e){this.towers.splice(this.towers.indexOf(e),1)}getAvailableTowers(){return this.towers.filter(e=>e.getCooldown()<=0)}getTowers(){return this.towers}addLinkedAgent(e){var i;this.linkedAgents||(this.linkedAgents=new Set),this.linkedAgents.add(e);const s=(i=this.staticEntity)==null?void 0:i.getAgent();s&&s.updateLinkedAgents&&s.updateLinkedAgents(this.linkedAgents)}removeLinkedAgent(e){var i;if(!this.linkedAgents)return;this.linkedAgents.delete(e);const s=(i=this.staticEntity)==null?void 0:i.getAgent();R(s)&&s.updateLinkedAgents&&s.updateLinkedAgents(this.linkedAgents)}getLinkedAgents(){return this.linkedAgents}getHash(){return this.hash}sync(e){this.towers=e.towers,this.discoveryStatus=e.discoveryStatus}}var j=(t=>(t[t.StatUpdate=0]="StatUpdate",t[t.SurfaceChange=1]="SurfaceChange",t[t.BlackOut=2]="BlackOut",t[t.OpenBuildMenu=3]="OpenBuildMenu",t[t.CloseBuildMenu=4]="CloseBuildMenu",t[t.SelectPlaceable=5]="SelectPlaceable",t[t.ToggleShowCoverage=6]="ToggleShowCoverage",t[t.StartWave=7]="StartWave",t[t.EndWave=8]="EndWave",t[t.Unlock=9]="Unlock",t[t.Discover=10]="Discover",t[t.Spawn=11]="Spawn",t[t.Buy=12]="Buy",t[t.Sell=13]="Sell",t[t.HitBase=14]="HitBase",t[t.Lose=15]="Lose",t[t.Kill=16]="Kill",t[t.Pierce=17]="Pierce",t[t.Bomb=18]="Bomb",t[t.Stun=19]="Stun",t))(j||{});const Y=class{constructor(){M(this,"eventHandlers");Y.instance=this,this.eventHandlers=new Map}addEventListener(e,s){return this.eventHandlers.has(e)?this.eventHandlers.get(e).add(s):this.eventHandlers.set(e,new Set([s])),()=>this.removeEventListener(e,s)}addEventListeners(e,s){const i=e.map(n=>this.addEventListener(n,s));return()=>i.forEach(n=>n())}removeEventListener(e,s){var i;(i=this.eventHandlers.get(e))==null||i.delete(s)}triggerEvent(e,...s){var i;(i=this.eventHandlers.get(e))==null||i.forEach(n=>n(...s))}static get Instance(){return this.instance}};let P=Y;M(P,"instance");function $(t){return"getCooldown"in t}const Z=t=>t.constructor.range,q=[[1,0],[-1,0],[0,1],[0,-1]],E=[...q,[1,1],[-1,-1],[-1,1],[1,-1]];class G{constructor(e){M(this,"map");M(this,"entities",[]);M(this,"deletedEntities",[]);M(this,"tickingEntities",[]);M(this,"entitiesMap",new Map);M(this,"towers",new Set);M(this,"width");M(this,"height");M(this,"dirty",!1);M(this,"_version",0);M(this,"changedTiles",new Set);M(this,"addedAgents",new Set);M(this,"removedAgents",new Set);this.width=e.width,this.height=e.height;const s="buffer"in e?e.buffer:e.generate;this.initialize(s??((i,n)=>new V(i,n)))}serialize(){const e=new Uint8Array(this.map.length*3);for(let s=0;s<this.map.length;s++){const i=this.map[s],n=s*3;e[n]=i.getX(),e[n+1]=i.getY(),e[n+2]=i.getType()}return{width:this.width,height:this.height,buffer:e}}initialize(e){if(this.entities=[],this.deletedEntities=[],this.entitiesMap.clear(),Object.values(L).filter(s=>typeof s!="string").forEach(s=>this.entitiesMap.set(s,new Set)),this.map=new Array(this.width*this.height),e instanceof Uint8Array)for(let s=0;s<this.map.length;s++){const i=s*3;this.map[s]=new V(e[i],e[i+1],e[i+2])}else{const s=[];for(let i=0;i<this.height;i++)for(let n=0;n<this.width;n++){const h=e(n,i);this.map[i*this.width+n]=h,h.hasStaticEntity()&&s.push(h.getStaticEntity())}for(let i of s)this.spawnStatic(i.getAgent())}}getTile(e,s,i=!1){return e>=this.width||e<0||s>=this.height||s<0?i?this.getTile(Math.max(Math.min(e,this.width-1),0),Math.max(Math.min(s,this.height-1),0)):void 0:this.map[s*this.width+e]}getEntityTiles(e,s,i){let n;if(s!==void 0)n=e;else{const h=e;n=h.getTile().getX(),s=h.getTile().getY(),i=H(h)}switch(i){case 1:return[this.map[s*this.width+n]];case 2:return[this.map[s*this.width+n],this.map[s*this.width+n+1],this.map[(s+1)*this.width+n],this.map[(s+1)*this.width+n+1]];default:throw new Error("Unsupported agent scale!")}}getAdjacentTiles(e,s=1,i=!1){return(i?E:q).map(([n,h])=>this.getTile(e.getX()+n*s,e.getY()+h*s)).filter(n=>!!n)}setTile(e){this.setTileInternal(e)}setTiles(e){e.map(s=>this.setTileInternal(s))}setTileInternal(e){this.dirty=!0,this._version++;const s=this.map[e.getY()*this.width+e.getX()];return s.hasStaticEntity()&&!e.hasStaticEntity()?e.setStaticEntity(s.getStaticEntity()):s.hasStaticEntity()&&this.despawnStatic(s.getStaticEntity().getAgent()),e.sync(s),this.map[e.getY()*this.width+e.getX()]=e,this.changedTiles.add(s),s}processChangedTiles(){this.changedTiles.size&&(P.Instance.triggerEvent(j.SurfaceChange,{affectedTiles:this.changedTiles,addedStaticAgents:this.addedAgents,removedStaticAgents:this.removedAgents}),this.changedTiles.clear(),this.addedAgents.clear(),this.removedAgents.clear())}getRow(e){const s=e*this.width;return this.map.slice(s,s+this.width)}getColumn(e){const s=new Array(this.height);for(let i=0;i<this.height;i++)s[i]=this.getTile(e,i);return s}getWidth(){return this.width}getHeight(){return this.height}forLine(e,s,i,n,h,a){const c=(a==null?void 0:a.scale)??1;e=Math.floor(e/c)*c,s=Math.floor(s/c)*c,i=Math.floor(i/c)*c,n=Math.floor(n/c)*c;const g=Math.atan2(n-s,i-e);return this.forRay(e,s,g,(p,f)=>!(h(p,f)===!1)&&!(p.getX()===i&&p.getY()===n),a)}forRay(e,s,i,n,h){const a=(h==null?void 0:h.connected)??!1,c=(h==null?void 0:h.scale)??1,g=Math.cos(i),p=Math.sin(i),f=Math.abs(g)+Math.abs(p);let k=Math.abs(g/f),v=Math.abs(p/f),S=(1+(k>v?v/k:k/v))*c;k*=S*Math.sign(g),v*=S*Math.sign(p);let I,C,x=0;for(;;){let r=!1;const o=Math.round(e/c)*c;let l=Math.round(s/c)*c;a&&I!==void 0&&Math.round(I/c)*c!==o&&Math.round(C/c)*c!==l&&(l=Math.round(C),r=!0);const u=this.getTile(o,l);if(!u||!n(u,x))break;r||(e+=k,s+=v),I=o,C=l,x++}}forRect(e,s,i,n,h,a){const c=(a==null?void 0:a.scale)??1;e=Math.floor(e/c)*c,s=Math.floor(s/c)*c,i=Math.floor(i/c)*c,n=Math.floor(n/c)*c;const g=(f,k)=>{const v=this.getTile(f,k);v&&h(v)},p=f=>{if(i>e)for(let k=e;k<=i;k+=c)g(k,f);else for(let k=e;k>=i;k-=c)g(k,f)};if(n>s)for(let f=s;f<=n;f+=c)p(f);else for(let f=s;f>=n;f-=c)p(f)}forCircle(e,s,i,n,h){const a=(h==null?void 0:h.edgeOnly)??!1,c=(h==null?void 0:h.scale)??1;e=Math.floor(e/c),s=Math.floor(s/c);let g=i/2;const p=g*g,f=(g-1)*(g-1),k=(v,S,I=0)=>{const C=v+I,x=S+I,r=C*C+x*x;if(r<p&&!(a&&r<f)){const o=this.getTile((e+v)*c,(s+S)*c,a);o&&n(o)}};if(i%2===0)for(let v=-g;v<g;v+=1)for(let S=-g;S<g;S+=1)k(S,v,.5);else{g=g|0;for(let v=-g;v<g+1;v+=1)for(let S=-g;S<g+1;S+=1)k(S,v)}}spawn(e){this.entities.push(e.entity),this.entitiesMap.get(e.category).add(e.entity),e.tick?this.tickingEntities.push(e.entity):this.dirty=!0,e.spawn&&e.spawn()}spawnStatic(e){this.getEntityTiles(e).forEach(i=>{i.setStaticEntity(e.entity),this.changedTiles.add(i)}),this.addedAgents.add(e),this.spawn(e),this.dirty=!0,$(e)&&Z(e)>1&&this.towers.add(e)}despawn(e){const s=this.entities.indexOf(e.entity);s>=0&&(this.entities.splice(s,1),e.tick&&this.tickingEntities.splice(this.tickingEntities.indexOf(e.entity),1));const i=this.entitiesMap.get(e.category).delete(e.entity);return this.deletedEntities.push(e.entity),e.despawn&&e.despawn(),i}despawnStatic(e){this.getEntityTiles(e).forEach(i=>{i.clearStaticEntity(),this.changedTiles.add(i)}),this.removedAgents.add(e),this.despawn(e),this.dirty=!0,$(e)&&this.towers.delete(e)}getEntities(){return this.entities}getTickingEntities(){return this.tickingEntities}getEntitiesForCategory(e){return this.entitiesMap.get(e)}getDeletedEntities(){return this.deletedEntities}getTowers(){return this.towers}getTiles(){return this.map}markPristine(){this.dirty=!1,this.deletedEntities=[]}forceRerender(){this.dirty=!0}isDirty(){return this.dirty}get version(){return this._version}}var T=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function y(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}var U={},tt={get exports(){return U},set exports(t){U=t}},X={},et={get exports(){return X},set exports(t){X=t}};(function(t,e){(function(){var s,i,n,h,a,c,g,p,f,k,v,S,I,C,x;n=Math.floor,k=Math.min,i=function(r,o){return r<o?-1:r>o?1:0},f=function(r,o,l,u,A){var w;if(l==null&&(l=0),A==null&&(A=i),l<0)throw new Error("lo must be non-negative");for(u==null&&(u=r.length);l<u;)w=n((l+u)/2),A(o,r[w])<0?u=w:l=w+1;return[].splice.apply(r,[l,l-l].concat(o)),o},c=function(r,o,l){return l==null&&(l=i),r.push(o),C(r,0,r.length-1,l)},a=function(r,o){var l,u;return o==null&&(o=i),l=r.pop(),r.length?(u=r[0],r[0]=l,x(r,0,o)):u=l,u},p=function(r,o,l){var u;return l==null&&(l=i),u=r[0],r[0]=o,x(r,0,l),u},g=function(r,o,l){var u;return l==null&&(l=i),r.length&&l(r[0],o)<0&&(u=[r[0],o],o=u[0],r[0]=u[1],x(r,0,l)),o},h=function(r,o){var l,u,A,w,B,F;for(o==null&&(o=i),w=function(){F=[];for(var b=0,W=n(r.length/2);0<=W?b<W:b>W;0<=W?b++:b--)F.push(b);return F}.apply(this).reverse(),B=[],u=0,A=w.length;u<A;u++)l=w[u],B.push(x(r,l,o));return B},I=function(r,o,l){var u;if(l==null&&(l=i),u=r.indexOf(o),u!==-1)return C(r,0,u,l),x(r,u,l)},v=function(r,o,l){var u,A,w,B,F;if(l==null&&(l=i),A=r.slice(0,o),!A.length)return A;for(h(A,l),F=r.slice(o),w=0,B=F.length;w<B;w++)u=F[w],g(A,u,l);return A.sort(l).reverse()},S=function(r,o,l){var u,A,w,B,F,b,W,_,z;if(l==null&&(l=i),o*10<=r.length){if(w=r.slice(0,o).sort(l),!w.length)return w;for(A=w[w.length-1],W=r.slice(o),B=0,b=W.length;B<b;B++)u=W[B],l(u,A)<0&&(f(w,u,0,null,l),w.pop(),A=w[w.length-1]);return w}for(h(r,l),z=[],F=0,_=k(o,r.length);0<=_?F<_:F>_;0<=_?++F:--F)z.push(a(r,l));return z},C=function(r,o,l,u){var A,w,B;for(u==null&&(u=i),A=r[l];l>o;){if(B=l-1>>1,w=r[B],u(A,w)<0){r[l]=w,l=B;continue}break}return r[l]=A},x=function(r,o,l){var u,A,w,B,F;for(l==null&&(l=i),A=r.length,F=o,w=r[o],u=2*o+1;u<A;)B=u+1,B<A&&!(l(r[u],r[B])<0)&&(u=B),r[o]=r[u],o=u,u=2*o+1;return r[o]=w,C(r,F,o,l)},s=function(){r.push=c,r.pop=a,r.replace=p,r.pushpop=g,r.heapify=h,r.updateItem=I,r.nlargest=v,r.nsmallest=S;function r(o){this.cmp=o??i,this.nodes=[]}return r.prototype.push=function(o){return c(this.nodes,o,this.cmp)},r.prototype.pop=function(){return a(this.nodes,this.cmp)},r.prototype.peek=function(){return this.nodes[0]},r.prototype.contains=function(o){return this.nodes.indexOf(o)!==-1},r.prototype.replace=function(o){return p(this.nodes,o,this.cmp)},r.prototype.pushpop=function(o){return g(this.nodes,o,this.cmp)},r.prototype.heapify=function(){return h(this.nodes,this.cmp)},r.prototype.updateItem=function(o){return I(this.nodes,o,this.cmp)},r.prototype.clear=function(){return this.nodes=[]},r.prototype.empty=function(){return this.nodes.length===0},r.prototype.size=function(){return this.nodes.length},r.prototype.clone=function(){var o;return o=new r,o.nodes=this.nodes.slice(0),o},r.prototype.toArray=function(){return this.nodes.slice(0)},r.prototype.insert=r.prototype.push,r.prototype.top=r.prototype.peek,r.prototype.front=r.prototype.peek,r.prototype.has=r.prototype.contains,r.prototype.copy=r.prototype.clone,r}(),function(r,o){return t.exports=o()}(this,function(){return s})}).call(T)})(et),function(t){t.exports=X}(tt);var st=y(U);class D{constructor(e,s,i,n,h,a=[]){M(this,"index",0);M(this,"sectionIndex",0);M(this,"tileSet");this.pathfinder=e,this.tiles=s,this.sections=i,this.speed=n,this.costs=h,this.checkpoints=a,this.tileSet=new Set(s)}performStep(e,s){const i=this.index%1,n=this.index|0,h=this.tiles[n],a=this.speed*s/(this.costs[n]??1);let c=this.index+a|0;n===c&&c++,c>=this.tiles.length-1&&(c=this.tiles.length-1);const g=this.tiles[c];for(;this.checkpoints.length>0;){const f=this.checkpoints[0];if(f&&c>=f.index)if(f.isCleared(this.tiles,e))this.checkpoints.shift();else return this.index=f.index-1,{from:this.tiles[this.index],to:g,step:0};else break}const p=this.costs[c]??1;for(this.index=Math.min(this.index+this.speed*s/p,this.tiles.length-1);this.index>this.sections[this.sectionIndex].to;)this.sectionIndex++;return{from:h,to:g,step:i}}getFuturePosition(e){let s=this.index,i=this.sectionIndex;for(;e>0;){const n=this.sections[i],h=n.to-s,a=h/this.speed*n.cost;if(e>a?(s+=h,i++,e-=a):(s+=h*e/a,e=0),s>=this.tiles.length-1)return this.tiles.length-1}return s}fastForward(e){let s=this.checkpoints[0];for(let i=(this.index|0)+1;i<this.tiles.length;i++){if(s&&i>=s.index)if(s.isCleared(this.tiles,e))this.checkpoints.shift(),s=this.checkpoints[0];else break;if(this.getTile(i).isDiscovered())break;this.index=i}}clone(){return new D(this.pathfinder,this.tiles,this.sections,this.speed,this.costs,[...this.checkpoints])}slice(e=0,s=Number.MAX_VALUE){const i=this.tiles.slice(e,s),n=this.costs.slice(e,s),h=D.calculateSections(i,n),a=this.checkpoints.filter(c=>c.index>=e&&c.index<s);return new D(this.pathfinder,i,h,this.speed,n,a)}setIndex(e){this.index=Math.max(Math.min(e,this.tiles.length-1),0),this.sectionIndex=this.sections.findIndex(({from:s,to:i})=>this.index>=s&&this.index<i)}getIndex(){return this.index}getTile(e=this.index){return this.tiles[e|0]}getTiles(){return this.tiles}getLength(){return this.tiles.length}getCoordinates(e=this.index){if(e>=this.tiles.length-1){const h=this.tiles[this.tiles.length-1];return{x:h.getX(),y:h.getY()}}const s=e%1,i=this.tiles[e|0],n=this.tiles[(e|0)+1];return{x:(n.getX()-i.getX())*s+i.getX(),y:(n.getY()-i.getY())*s+i.getY()}}getSpeed(){return this.speed}setSpeed(e){this.speed=e}isDone(){return this.index===this.tiles.length-1}isPaused(e){if(this.isDone())return!0;const s=this.getNextCheckpoint();return s&&s.index===this.index+1&&!s.isCleared(this.tiles,e)}getNextCheckpoint(){return this.checkpoints[0]||null}getCheckpoints(){return this.checkpoints}setCheckpoints(e){this.checkpoints=e}getCurrentTile(){return this.tiles[this.index|0]}recompute(){const e=this.pathfinder.getSurface();let s;for(let i=0;i<this.tiles.length;i++){const n=this.tiles[i],h=e.getTile(n.getX(),n.getY());this.tiles[i]=h,this.costs[i]=this.pathfinder.getCost(h,s)??1,s=h,n!==h&&(this.tileSet.delete(n),this.tileSet.add(h))}this.sections=D.calculateSections(this.tiles,this.costs)}isAffectedByTiles(e){for(let s of e)if(this.tileSet.has(s))return!0;return!1}static calculateSections(e,s){return e.reduce((i,n,h)=>{const a=i[i.length-1],c=s[h];return a?(a.cost===c?a.to++:i.push({from:h,to:h+1,cost:c}),i):[{from:h,to:h+1,cost:c}]},[])}static fromTiles(e,s,i=1){const n=new D(e,s,[],i,[]);return n.recompute(),n}static fromMapAndCosts(e,s,i,n,h=1){let a=i;const c=[a];for(;a!==s;)a=n.get(a.getHash()),c.push(a);return this.fromTiles(e,c.reverse(),h)}}const it={[d.Grass]:3,[d.Water]:20,[d.Stone]:4,[d.Wall]:3,[d.Spore]:2,[d.ElectricFence]:5,[d.Fence]:20,[d.Freezer]:6,[d.Obstructed]:3,[d.Bridge]:5,[d.Dirt]:2.5,[d.Sand]:3.5,[d.Snow]:3.5,[d.Ice]:10,[d.PlayerBuilding]:3,[d.Tree]:5,[d.Rock]:5,[d.Base]:Number.EPSILON},nt={[d.Fence]:5,[d.ElectricFence]:40,[d.Wall]:500,[d.Freezer]:.5,[d.Obstructed]:500,[d.PlayerBuilding]:-10};d.Grass+"",d.Water+"",d.Stone+"",d.Wall+"",d.Spore+"",d.ElectricFence+"",d.Fence+"",d.Freezer+"",d.Obstructed+"",d.Bridge+"",d.Dirt+"",d.Sand+"",d.Snow+"",d.Ice+"",d.PlayerBuilding+"",d.Tree+"",d.Rock+"",d.Base+"",Number.EPSILON,d.Fence+"",d.ElectricFence+"",d.Wall+"",d.Tree+"",d.Rock+"",d.Obstructed+"",d.PlayerBuilding+"";const rt=[[0,-1],[-1,0],[1,0],[0,1],[-1,-1],[1,-1],[-1,1],[1,1]],ht=150;class ot{constructor(e,s=nt,i=it,n=1){M(this,"neighbors");M(this,"computedCosts");M(this,"computedMultipliers");M(this,"scaledWidth");M(this,"scaledHeight");M(this,"computedVersion",-1);this.surface=e,this.costMultipliers=s,this.costs=i,this.scale=n,this.neighbors=rt.map(([h,a])=>[h*n,a*n])}getPath(e,s,i){this.computedVersion!==this.surface.version&&this.computeCosts(),e=this.surface.getTile(Math.floor(e.getX()/this.scale)*this.scale,Math.floor(e.getY()/this.scale)*this.scale),s=this.surface.getTile(Math.floor(s.getX()/this.scale)*this.scale,Math.floor(s.getY()/this.scale)*this.scale);const n=i?S=>i(this.computedMultipliers[this.getIndex(S)],S):S=>this.computedMultipliers[this.getIndex(S)],h=new Set,c=(this.computedCosts[this.getIndex(e)]??1)*n(e),g=new Map;g.set(e.getHash(),c);const p=new Map;p.set(e.getHash(),c);const f=new Map;f.set(e.getHash(),c+this.heuristic(e,s));const k=new st((S,I)=>(f.get(S.getHash())??1/0)-(f.get(I.getHash())??1/0));k.push(e);const v=new Map;for(;!k.empty();){let S=k.pop();if(s===S)return D.fromMapAndCosts(this,e,s,v);const I=S.getHash(),C=this.neighbors.map(([r,o])=>this.surface.getTile(r+S.getX(),o+S.getY())),x=[];this.setCostAndMultiplier(0,x,n,C[0]),this.setCostAndMultiplier(1,x,n,C[1]),this.setCostAndMultiplier(2,x,n,C[2]),this.setCostAndMultiplier(3,x,n,C[3]),this.setDiagonalCostAndMultiplier(4,0,1,x,n,C[4]),this.setDiagonalCostAndMultiplier(5,0,2,x,n,C[5]),this.setDiagonalCostAndMultiplier(6,1,3,x,n,C[6]),this.setDiagonalCostAndMultiplier(7,2,3,x,n,C[7]),C.forEach((r,o)=>{if(!r)return;const l=x[o*2];if(!l||h.has(r))return;const u=r.getHash(),A=p.get(I)+x[o*2+1];if(A<(p.get(u)??1/0)){const w=g.get(I)+l;g.set(u,w),v.set(u,S),p.set(u,A),f.set(u,A+this.heuristic(r,s)),k.push(r),h.add(S)}})}}getHivePath(e,s){const i={},n=(h,a)=>(i[a.getHash()]??1)*h;return e.reduce((h,a,c)=>{const g=this.getPath(a,s,n);return h.push(g),g&&e.length>c-1&&g.getTiles().forEach(p=>{p.hasStaticEntity()&&(i[p.getHash()]=.85),i[p.getHash()]=i[p.getHash()]+.1||1.1}),h},[])}getCost(e,s){this.computedVersion!==this.surface.version&&this.computeCosts();const i=this.computedCosts[this.getIndex(e)];if(!s)return i;const n=this.computedCosts[this.getIndex(s)];if(!i||!n)return null;const h=(i+n)/2;return!i||!n||e.getX()===s.getX()||e.getY()==s.getY()?h:h+(this.computedCosts[(s.getY()/this.scale|0)*this.scaledWidth+(e.getX()/this.scale|0)]+this.computedCosts[(e.getY()/this.scale|0)*this.scaledWidth+(s.getX()/this.scale|0)])/4}getSurface(){return this.surface}heuristic(e,s){return Math.abs(e.getX()-s.getX())+Math.abs(e.getY()-s.getY())}setCostAndMultiplier(e,s,i,n){if(!n)return;const h=this.computedCosts[this.getIndex(n)];h&&(s[e*2]=h,s[e*2+1]=h*i(n))}setDiagonalCostAndMultiplier(e,s,i,n,h,a){if(!a||!n[s*2]||!n[i*2])return;const c=n[s*2+1]+n[i*2+1];if(c>ht)return;const g=this.computedCosts[this.getIndex(a)];g&&(n[e*2]=g+(n[s*2]+n[i*2])/4,n[e*2+1]=g*h(a)+c/4)}computeCosts(){this.computedVersion=this.surface.version;const e=this.scale**2;this.scaledWidth=Math.floor(this.surface.getWidth()/this.scale),this.scaledHeight=Math.floor(this.surface.getHeight()/this.scale);const s=this.scaledWidth*this.scaledHeight;this.computedCosts=new Array(s),this.computedMultipliers=new Array(s);for(let i=0;i<this.scaledWidth;i++)for(let n=0;n<this.scaledHeight;n++){const h=this.surface.getEntityTiles(i*this.scale,n*this.scale,this.scale);let a=0,c=0;for(let p=0;p<h.length;p++){let f=h[p].getType();if(!this.costs[f]){a=null,c=e;break}a+=this.costs[f],c+=this.costMultipliers[f]??1}const g=n*this.scaledWidth+i;this.computedCosts[g]=a===null?null:a/e,this.computedMultipliers[g]=c/e}}getIndex(e){return(e.getY()/this.scale|0)*this.scaledWidth+(e.getX()/this.scale|0)}}onmessage=({data:{width:t,height:e,buffer:s,costMultiplier:i,costs:n,scale:h,startPoints:a,target:c}})=>{const g=new G({width:t,height:e,buffer:new Uint8Array(s)}),p=new ot(g,i,n,h),f=a.map(({x:I,y:C})=>g.getTile(I,C)),k=g.getTile(c.x,c.y),S=p.getHivePath(f,k).filter(I=>!!I).map(I=>I.getTiles().map(C=>C.serialize()));postMessage(S)}})();
