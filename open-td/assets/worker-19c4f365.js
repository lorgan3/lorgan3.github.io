var ct=Object.defineProperty;var lt=(P,R,b)=>R in P?ct(P,R,{enumerable:!0,configurable:!0,writable:!0,value:b}):P[R]=b;var M=(P,R,b)=>(lt(P,typeof R!="symbol"?R+"":R,b),b);(function(){"use strict";const P=t=>t.constructor.scale;function R(t){return t?"getTile"in t:!1}var b=(t=>(t[t.Unknown=0]="Unknown",t[t.Player=1]="Player",t[t.Enemy=2]="Enemy",t))(b||{}),x=(t=>(t[t.None=0]="None",t[t.Tower=1]="Tower",t[t.Slime=2]="Slime",t[t.Base=3]="Base",t[t.Bullet=4]="Bullet",t[t.Wall=5]="Wall",t[t.Mortar=6]="Mortar",t[t.Flamethrower=7]="Flamethrower",t[t.Flame=8]="Flame",t[t.Railgun=9]="Railgun",t[t.Rail=10]="Rail",t[t.ElectricFence=11]="ElectricFence",t[t.Fence=12]="Fence",t[t.Freezer=13]="Freezer",t[t.Tree=14]="Tree",t[t.Stump=15]="Stump",t[t.Rock=16]="Rock",t[t.Radar=17]="Radar",t[t.PowerPlant=18]="PowerPlant",t[t.Blueprint=19]="Blueprint",t[t.Shockwave=20]="Shockwave",t[t.Armory=21]="Armory",t[t.Market=22]="Market",t[t.SpeedBeacon=23]="SpeedBeacon",t[t.Runner=24]="Runner",t[t.DamageBeacon=25]="DamageBeacon",t[t.Laser=26]="Laser",t[t.LaserBeam=27]="LaserBeam",t[t.Flier=28]="Flier",t[t.Tank=29]="Tank",t[t.Rocket=30]="Rocket",t[t.WavePoint=31]="WavePoint",t[t.Barracks=32]="Barracks",t[t.Tesla=33]="Tesla",t[t.Spark=34]="Spark",t[t.Behemoth=35]="Behemoth",t[t.Bore=36]="Bore",t[t.Excavator=37]="Excavator",t[t.Convert=38]="Convert",t[t.Terraform=39]="Terraform",t[t.EmergencyRecharge=40]="EmergencyRecharge",t[t.EmergencyRepair=41]="EmergencyRepair",t))(x||{});[...new Set([3,17,18,21,22,32])];var O=(t=>(t[t.Undiscovered=0]="Undiscovered",t[t.Pending=1]="Pending",t[t.Discovered=2]="Discovered",t))(O||{}),g=(t=>(t[t.Void=0]="Void",t[t.Grass=1]="Grass",t[t.Stone=2]="Stone",t[t.Water=3]="Water",t[t.Obstructed=4]="Obstructed",t[t.Wall=5]="Wall",t[t.Spore=6]="Spore",t[t.ElectricFence=7]="ElectricFence",t[t.Fence=8]="Fence",t[t.Freezer=9]="Freezer",t[t.Bridge=10]="Bridge",t[t.Dirt=11]="Dirt",t[t.Snow=12]="Snow",t[t.Sand=13]="Sand",t[t.Ice=14]="Ice",t[t.PlayerBuilding=15]="PlayerBuilding",t[t.Tree=16]="Tree",t[t.Rock=17]="Rock",t[t.Base=18]="Base",t))(g||{}),N=(t=>(t[t.WaterAlt=19]="WaterAlt",t[t.WaterStill=20]="WaterStill",t[t.GrassFlower=21]="GrassFlower",t[t.GrassAlt=22]="GrassAlt",t[t.GrassPlain=23]="GrassPlain",t[t.SandAlt=24]="SandAlt",t[t.SnowAlt=25]="SnowAlt",t[t.IceAlt=26]="IceAlt",t[t.Static1=27]="Static1",t[t.Static2=28]="Static2",t[t.Static3=29]="Static3",t))(N||{});const K={[19]:3,[20]:3,[21]:1,[22]:1,[23]:1,[24]:13,[25]:12,[26]:14,[27]:0,[28]:0,[29]:0},J=new Set([1,2,11,13,12]);[...new Set([...J,3,14,10,16,17])];const Q={[x.Tower]:4,[x.Wall]:5,[x.Mortar]:4,[x.Flamethrower]:4,[x.Railgun]:4,[x.ElectricFence]:7,[x.Fence]:8,[x.Freezer]:9,[x.Radar]:18,[x.PowerPlant]:18,[x.Tree]:16,[x.Rock]:17,[x.Armory]:18,[x.Base]:18,[x.Market]:18,[x.SpeedBeacon]:4,[x.DamageBeacon]:4,[x.Laser]:4,[x.Barracks]:18,[x.Tesla]:4};class V{constructor(e,s,i=g.Void){M(this,"staticEntity",null);M(this,"hash");M(this,"actualType");M(this,"type");M(this,"towers",[]);M(this,"linkedAgents");M(this,"discoveryStatus",O.Undiscovered);this.x=e,this.y=s,this.altType=i,this.hash=`[${this.x}, ${this.y}]`,this.type=K[i]??i,this.actualType=this.type}serialize(){return{x:this.x,y:this.y,type:this.type}}getX(){return this.x}getY(){return this.y}getBaseType(){return this.type}getAltType(){return this.altType}getAnimation(){return this.type===g.Water?[g.Water,N.WaterAlt,N.WaterStill]:[this.altType]}getType(){return this.actualType}getStaticEntity(){return this.staticEntity}hasStaticEntity(){return this.staticEntity!==null}setStaticEntity(e){if(e===this.staticEntity)return;if(this.staticEntity!==null)throw new Error("A tile can only have 1 static entity.");const s=e.getAgent();R(s)&&s.getTile().getHash()===this.getHash()&&(s.updateTile(this),this.linkedAgents&&s.updateLinkedAgents&&s.updateLinkedAgents(this.linkedAgents)),this.staticEntity=e,this.actualType=Q[e.getAgent().getType()]||this.type}clearStaticEntity(){this.staticEntity=null,this.actualType=this.type}isStaticEntityRoot(){var e;return((e=this.staticEntity)==null?void 0:e.getAgent().getTile())===this}addTower(e){this.towers.includes(e)||this.towers.push(e)}setDiscoveryStatus(e){this.discoveryStatus=e}isDiscovered(){return this.discoveryStatus===O.Discovered}getDiscoveryStatus(){return this.discoveryStatus}isCoveredByTower(){return this.isDiscovered()&&this.towers.length>0}removeTower(e){this.towers.splice(this.towers.indexOf(e),1)}getAvailableTowers(){return this.towers.filter(e=>e.getCooldown()<=0)}getTowers(){return this.towers}addLinkedAgent(e){var i;this.linkedAgents||(this.linkedAgents=new Set),this.linkedAgents.add(e);const s=(i=this.staticEntity)==null?void 0:i.getAgent();s&&s.updateLinkedAgents&&s.updateLinkedAgents(this.linkedAgents)}removeLinkedAgent(e){var i;if(!this.linkedAgents)return;this.linkedAgents.delete(e);const s=(i=this.staticEntity)==null?void 0:i.getAgent();R(s)&&s.updateLinkedAgents&&s.updateLinkedAgents(this.linkedAgents)}getLinkedAgents(){return this.linkedAgents}getHash(){return this.hash}sync(e){this.towers=e.towers,this.discoveryStatus=e.discoveryStatus}}var j=(t=>(t[t.StatUpdate=0]="StatUpdate",t[t.SurfaceChange=1]="SurfaceChange",t[t.BlackOut=2]="BlackOut",t[t.OpenBuildMenu=3]="OpenBuildMenu",t[t.CloseBuildMenu=4]="CloseBuildMenu",t[t.SelectPlaceable=5]="SelectPlaceable",t[t.ToggleShowCoverage=6]="ToggleShowCoverage",t[t.StartWave=7]="StartWave",t[t.EndWave=8]="EndWave",t[t.Unlock=9]="Unlock",t[t.Discover=10]="Discover",t[t.Spawn=11]="Spawn",t[t.Buy=12]="Buy",t[t.Sell=13]="Sell",t[t.HitBase=14]="HitBase",t[t.Lose=15]="Lose",t[t.Kill=16]="Kill",t[t.Pierce=17]="Pierce",t[t.Bomb=18]="Bomb",t[t.Stun=19]="Stun",t))(j||{});const Y=class{constructor(){M(this,"eventHandlers");Y.instance=this,this.eventHandlers=new Map}addEventListener(e,s){return this.eventHandlers.has(e)?this.eventHandlers.get(e).add(s):this.eventHandlers.set(e,new Set([s])),()=>this.removeEventListener(e,s)}addEventListeners(e,s){const i=e.map(n=>this.addEventListener(n,s));return()=>i.forEach(n=>n())}removeEventListener(e,s){var i;(i=this.eventHandlers.get(e))==null||i.delete(s)}triggerEvent(e,...s){var i;(i=this.eventHandlers.get(e))==null||i.forEach(n=>n(...s))}static get Instance(){return this.instance}};let _=Y;M(_,"instance");function $(t){return"getCooldown"in t}const Z=t=>t.constructor.range,q=[[1,0],[-1,0],[0,1],[0,-1]],E=[...q,[1,1],[-1,-1],[-1,1],[1,-1]];class G{constructor(e){M(this,"map");M(this,"entities",[]);M(this,"deletedEntities",[]);M(this,"tickingEntities",[]);M(this,"entitiesMap",new Map);M(this,"towers",new Set);M(this,"width");M(this,"height");M(this,"dirty",!1);M(this,"_version",0);M(this,"changedTiles",new Set);M(this,"addedAgents",new Set);M(this,"removedAgents",new Set);this.width=e.width,this.height=e.height;const s="buffer"in e?e.buffer:e.generate;this.initialize(s??((i,n)=>new V(i,n)))}serialize(){const e=new Uint8Array(this.map.length*3);for(let s=0;s<this.map.length;s++){const i=this.map[s],n=s*3;e[n]=i.getX(),e[n+1]=i.getY(),e[n+2]=i.getType()}return{width:this.width,height:this.height,buffer:e}}initialize(e){if(this.entities=[],this.deletedEntities=[],this.entitiesMap.clear(),Object.values(b).filter(s=>typeof s!="string").forEach(s=>this.entitiesMap.set(s,new Set)),this.map=new Array(this.width*this.height),e instanceof Uint8Array)for(let s=0;s<this.map.length;s++){const i=s*3;this.map[s]=new V(e[i],e[i+1],e[i+2])}else{const s=[];for(let i=0;i<this.height;i++)for(let n=0;n<this.width;n++){const h=e(n,i);this.map[i*this.width+n]=h,h.hasStaticEntity()&&s.push(h.getStaticEntity())}for(let i of s)this.spawnStatic(i.getAgent())}}getTile(e,s,i=!1){return e>=this.width||e<0||s>=this.height||s<0?i?this.getTile(Math.max(Math.min(e,this.width-1),0),Math.max(Math.min(s,this.height-1),0)):void 0:this.map[s*this.width+e]}getEntityTiles(e,s,i){let n;if(s!==void 0)n=e;else{const h=e;n=h.getTile().getX(),s=h.getTile().getY(),i=P(h)}switch(i){case 1:return[this.map[s*this.width+n]];case 2:return[this.map[s*this.width+n],this.map[s*this.width+n+1],this.map[(s+1)*this.width+n],this.map[(s+1)*this.width+n+1]];default:throw new Error("Unsupported agent scale!")}}getAdjacentTiles(e,s=1,i=!1){return(i?E:q).map(([n,h])=>this.getTile(e.getX()+n*s,e.getY()+h*s)).filter(n=>!!n)}setTile(e){this.setTileInternal(e)}setTiles(e){e.map(s=>this.setTileInternal(s))}setTileInternal(e){this.dirty=!0,this._version++;const s=this.map[e.getY()*this.width+e.getX()];return s.hasStaticEntity()&&!e.hasStaticEntity()?e.setStaticEntity(s.getStaticEntity()):s.hasStaticEntity()&&this.despawnStatic(s.getStaticEntity().getAgent()),e.sync(s),this.map[e.getY()*this.width+e.getX()]=e,this.changedTiles.add(s),s}processChangedTiles(){this.changedTiles.size&&(_.Instance.triggerEvent(j.SurfaceChange,{affectedTiles:this.changedTiles,addedStaticAgents:this.addedAgents,removedStaticAgents:this.removedAgents}),this.changedTiles.clear(),this.addedAgents.clear(),this.removedAgents.clear())}getRow(e){const s=e*this.width;return this.map.slice(s,s+this.width)}getColumn(e){const s=new Array(this.height);for(let i=0;i<this.height;i++)s[i]=this.getTile(e,i);return s}getWidth(){return this.width}getHeight(){return this.height}forLine(e,s,i,n,h,a){const o=(a==null?void 0:a.scale)??1;e=Math.floor(e/o)*o,s=Math.floor(s/o)*o,i=Math.floor(i/o)*o,n=Math.floor(n/o)*o;const u=Math.atan2(n-s,i-e);return this.forRay(e,s,u,(p,f)=>!(h(p,f)===!1)&&!(p.getX()===i&&p.getY()===n),a)}forRay(e,s,i,n,h){const a=(h==null?void 0:h.connected)??!1,o=(h==null?void 0:h.scale)??1,u=Math.cos(i),p=Math.sin(i),f=Math.abs(u)+Math.abs(p);let S=Math.abs(u/f),C=Math.abs(p/f),k=(1+(S>C?C/S:S/C))*o;S*=k*Math.sign(u),C*=k*Math.sign(p);let I,m,v=0;for(;;){let r=!1;const c=Math.round(e/o)*o;let l=Math.round(s/o)*o;a&&I!==void 0&&Math.round(I/o)*o!==c&&Math.round(m/o)*o!==l&&(l=Math.round(m),r=!0);const d=this.getTile(c,l);if(!d||!n(d,v))break;r||(e+=S,s+=C),I=c,m=l,v++}}forRect(e,s,i,n,h,a){const o=(a==null?void 0:a.scale)??1;e=Math.floor(e/o)*o,s=Math.floor(s/o)*o,i=Math.floor(i/o)*o,n=Math.floor(n/o)*o;const u=(f,S)=>{const C=this.getTile(f,S);C&&h(C)},p=f=>{if(i>e)for(let S=e;S<=i;S+=o)u(S,f);else for(let S=e;S>=i;S-=o)u(S,f)};if(n>s)for(let f=s;f<=n;f+=o)p(f);else for(let f=s;f>=n;f-=o)p(f)}forCircle(e,s,i,n,h){const a=(h==null?void 0:h.edgeOnly)??!1,o=(h==null?void 0:h.scale)??1;e=Math.floor(e/o),s=Math.floor(s/o);let u=i/2;const p=u*u,f=(u-1)*(u-1),S=(C,k,I=0)=>{const m=C+I,v=k+I,r=m*m+v*v;if(r<p&&!(a&&r<f)){const c=this.getTile((e+C)*o,(s+k)*o,a);c&&n(c)}};if(i%2===0)for(let C=-u;C<u;C+=1)for(let k=-u;k<u;k+=1)S(k,C,.5);else{u=u|0;for(let C=-u;C<u+1;C+=1)for(let k=-u;k<u+1;k+=1)S(k,C)}}spawn(e){this.entities.push(e.entity),this.entitiesMap.get(e.category).add(e.entity),e.tick?this.tickingEntities.push(e.entity):this.dirty=!0,e.spawn&&e.spawn()}spawnStatic(e){this.getEntityTiles(e).forEach(i=>{i.setStaticEntity(e.entity),this.changedTiles.add(i)}),this.addedAgents.add(e),this.spawn(e),this.dirty=!0,$(e)&&Z(e)>1&&this.towers.add(e)}despawn(e){const s=this.entities.indexOf(e.entity);s>=0&&(this.entities.splice(s,1),e.tick&&this.tickingEntities.splice(this.tickingEntities.indexOf(e.entity),1));const i=this.entitiesMap.get(e.category).delete(e.entity);return this.deletedEntities.push(e.entity),e.despawn&&e.despawn(),i}despawnStatic(e){this.getEntityTiles(e).forEach(i=>{i.clearStaticEntity(),this.changedTiles.add(i)}),this.removedAgents.add(e),this.despawn(e),this.dirty=!0,$(e)&&this.towers.delete(e)}getEntities(){return this.entities}getTickingEntities(){return this.tickingEntities}getEntitiesForCategory(e){return this.entitiesMap.get(e)}getDeletedEntities(){return this.deletedEntities}getTowers(){return this.towers}getTiles(){return this.map}markPristine(){this.dirty=!1,this.deletedEntities=[]}forceRerender(){this.dirty=!0}isDirty(){return this.dirty}get version(){return this._version}}var T=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function y(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}var U={},tt={get exports(){return U},set exports(t){U=t}},X={},et={get exports(){return X},set exports(t){X=t}};(function(t,e){(function(){var s,i,n,h,a,o,u,p,f,S,C,k,I,m,v;n=Math.floor,S=Math.min,i=function(r,c){return r<c?-1:r>c?1:0},f=function(r,c,l,d,A){var w;if(l==null&&(l=0),A==null&&(A=i),l<0)throw new Error("lo must be non-negative");for(d==null&&(d=r.length);l<d;)w=n((l+d)/2),A(c,r[w])<0?d=w:l=w+1;return[].splice.apply(r,[l,l-l].concat(c)),c},o=function(r,c,l){return l==null&&(l=i),r.push(c),m(r,0,r.length-1,l)},a=function(r,c){var l,d;return c==null&&(c=i),l=r.pop(),r.length?(d=r[0],r[0]=l,v(r,0,c)):d=l,d},p=function(r,c,l){var d;return l==null&&(l=i),d=r[0],r[0]=c,v(r,0,l),d},u=function(r,c,l){var d;return l==null&&(l=i),r.length&&l(r[0],c)<0&&(d=[r[0],c],c=d[0],r[0]=d[1],v(r,0,l)),c},h=function(r,c){var l,d,A,w,B,F;for(c==null&&(c=i),w=function(){F=[];for(var W=0,H=n(r.length/2);0<=H?W<H:W>H;0<=H?W++:W--)F.push(W);return F}.apply(this).reverse(),B=[],d=0,A=w.length;d<A;d++)l=w[d],B.push(v(r,l,c));return B},I=function(r,c,l){var d;if(l==null&&(l=i),d=r.indexOf(c),d!==-1)return m(r,0,d,l),v(r,d,l)},C=function(r,c,l){var d,A,w,B,F;if(l==null&&(l=i),A=r.slice(0,c),!A.length)return A;for(h(A,l),F=r.slice(c),w=0,B=F.length;w<B;w++)d=F[w],u(A,d,l);return A.sort(l).reverse()},k=function(r,c,l){var d,A,w,B,F,W,H,D,z;if(l==null&&(l=i),c*10<=r.length){if(w=r.slice(0,c).sort(l),!w.length)return w;for(A=w[w.length-1],H=r.slice(c),B=0,W=H.length;B<W;B++)d=H[B],l(d,A)<0&&(f(w,d,0,null,l),w.pop(),A=w[w.length-1]);return w}for(h(r,l),z=[],F=0,D=S(c,r.length);0<=D?F<D:F>D;0<=D?++F:--F)z.push(a(r,l));return z},m=function(r,c,l,d){var A,w,B;for(d==null&&(d=i),A=r[l];l>c;){if(B=l-1>>1,w=r[B],d(A,w)<0){r[l]=w,l=B;continue}break}return r[l]=A},v=function(r,c,l){var d,A,w,B,F;for(l==null&&(l=i),A=r.length,F=c,w=r[c],d=2*c+1;d<A;)B=d+1,B<A&&!(l(r[d],r[B])<0)&&(d=B),r[c]=r[d],c=d,d=2*c+1;return r[c]=w,m(r,F,c,l)},s=function(){r.push=o,r.pop=a,r.replace=p,r.pushpop=u,r.heapify=h,r.updateItem=I,r.nlargest=C,r.nsmallest=k;function r(c){this.cmp=c??i,this.nodes=[]}return r.prototype.push=function(c){return o(this.nodes,c,this.cmp)},r.prototype.pop=function(){return a(this.nodes,this.cmp)},r.prototype.peek=function(){return this.nodes[0]},r.prototype.contains=function(c){return this.nodes.indexOf(c)!==-1},r.prototype.replace=function(c){return p(this.nodes,c,this.cmp)},r.prototype.pushpop=function(c){return u(this.nodes,c,this.cmp)},r.prototype.heapify=function(){return h(this.nodes,this.cmp)},r.prototype.updateItem=function(c){return I(this.nodes,c,this.cmp)},r.prototype.clear=function(){return this.nodes=[]},r.prototype.empty=function(){return this.nodes.length===0},r.prototype.size=function(){return this.nodes.length},r.prototype.clone=function(){var c;return c=new r,c.nodes=this.nodes.slice(0),c},r.prototype.toArray=function(){return this.nodes.slice(0)},r.prototype.insert=r.prototype.push,r.prototype.top=r.prototype.peek,r.prototype.front=r.prototype.peek,r.prototype.has=r.prototype.contains,r.prototype.copy=r.prototype.clone,r}(),function(r,c){return t.exports=c()}(this,function(){return s})}).call(T)})(et),function(t){t.exports=X}(tt);var st=y(U);class L{constructor(e,s,i,n,h,a=[]){M(this,"index",0);M(this,"sectionIndex",0);M(this,"tileSet");this.pathfinder=e,this.tiles=s,this.sections=i,this.speed=n,this.costs=h,this.checkpoints=a,this.tileSet=new Set(s)}performStep(e,s){const i=this.index%1,n=this.index|0,h=this.tiles[n],a=this.speed*s/(this.costs[n]??1);let o=this.index+a|0;n===o&&o++,o>=this.tiles.length-1&&(o=this.tiles.length-1);const u=this.tiles[o];for(;this.checkpoints.length>0;){const f=this.checkpoints[0];if(f&&o>=f.index)if(f.isCleared(this.tiles,e))this.checkpoints.shift();else return this.index=f.index-1,{from:this.tiles[this.index],to:u,step:0};else break}const p=this.costs[o]??1;for(this.index=Math.min(this.index+this.speed*s/p,this.tiles.length-1);this.index>this.sections[this.sectionIndex].to;)this.sectionIndex++;return{from:h,to:u,step:i}}getFuturePosition(e){let s=this.index,i=this.sectionIndex;for(;e>0;){const n=this.sections[i],h=n.to-s,a=h/this.speed*n.cost;if(e>a?(s+=h,i++,e-=a):(s+=h*e/a,e=0),s>=this.tiles.length-1)return this.tiles.length-1}return s}fastForward(e){let s=this.checkpoints[0];for(let i=(this.index|0)+1;i<this.tiles.length;i++){if(s&&i>=s.index)if(s.isCleared(this.tiles,e))this.checkpoints.shift(),s=this.checkpoints[0];else break;if(this.getTile(i).isDiscovered())break;this.index=i}}clone(){return new L(this.pathfinder,this.tiles,this.sections,this.speed,this.costs,[...this.checkpoints])}slice(e=0,s=Number.MAX_VALUE){const i=this.tiles.slice(e,s),n=this.costs.slice(e,s),h=L.calculateSections(i,n),a=this.checkpoints.filter(o=>o.index>=e&&o.index<s);return new L(this.pathfinder,i,h,this.speed,n,a)}setIndex(e){this.index=Math.max(Math.min(e,this.tiles.length-1),0),this.sectionIndex=this.sections.findIndex(({from:s,to:i})=>this.index>=s&&this.index<i)}getIndex(){return this.index}getTile(e=this.index){return this.tiles[e|0]}getTiles(){return this.tiles}getLength(){return this.tiles.length}getCoordinates(e=this.index){if(e>=this.tiles.length-1){const h=this.tiles[this.tiles.length-1];return{x:h.getX(),y:h.getY()}}const s=e%1,i=this.tiles[e|0],n=this.tiles[(e|0)+1];return{x:(n.getX()-i.getX())*s+i.getX(),y:(n.getY()-i.getY())*s+i.getY()}}getSpeed(){return this.speed}setSpeed(e){this.speed=e}isDone(){return this.index===this.tiles.length-1}isPaused(e){if(this.isDone())return!0;const s=this.getNextCheckpoint();return s&&s.index===this.index+1&&!s.isCleared(this.tiles,e)}getNextCheckpoint(){return this.checkpoints[0]||null}getCheckpoints(){return this.checkpoints}setCheckpoints(e){this.checkpoints=e}getCurrentTile(){return this.index<0?this.tiles[0]:this.tiles[this.index|0]}recompute(){const e=this.pathfinder.getSurface();let s;for(let i=0;i<this.tiles.length;i++){const n=this.tiles[i],h=e.getTile(n.getX(),n.getY());this.tiles[i]=h,this.costs[i]=this.pathfinder.getCost(h,s)??1,s=h,n!==h&&(this.tileSet.delete(n),this.tileSet.add(h))}this.sections=L.calculateSections(this.tiles,this.costs)}isAffectedByTiles(e){for(let s of e)if(this.tileSet.has(s))return!0;return!1}static calculateSections(e,s){return e.reduce((i,n,h)=>{const a=i[i.length-1],o=s[h];return a?(a.cost===o?a.to++:i.push({from:h,to:h+1,cost:o}),i):[{from:h,to:h+1,cost:o}]},[])}static fromTiles(e,s,i=1){const n=new L(e,s,[],i,[]);return n.recompute(),n}static fromMapAndCosts(e,s,i,n,h=1){let a=i;const o=[a];for(;a!==s;)a=n.get(a.getHash()),o.push(a);return this.fromTiles(e,o.reverse(),h)}static fromPaths(e,s){const i=s.map(u=>u.getTiles()),n=s.map(u=>u.getCheckpoints()),h=i[0],a=n[0];for(let u=1;u<i.length;u++){const p=i[u];if(h[h.length-1]!==p[0])throw console.log(h[h.length-1],p[0]),new Error("Cannot merge paths because they don't start and end at the same point");const f=n[u].filter(S=>S.index!==0);f.forEach(S=>S.index+=h.length),a.push(...f),p.shift(),h.push(...p)}const o=L.fromTiles(e,h,s[0].getSpeed());return o.setCheckpoints(a),o}}const it={[g.Grass]:3,[g.Water]:20,[g.Stone]:4,[g.Wall]:3,[g.Spore]:2,[g.ElectricFence]:5,[g.Fence]:20,[g.Freezer]:6,[g.Obstructed]:3,[g.Bridge]:5,[g.Dirt]:2.5,[g.Sand]:3.5,[g.Snow]:3.5,[g.Ice]:10,[g.PlayerBuilding]:3,[g.Tree]:5,[g.Rock]:5,[g.Base]:Number.EPSILON},nt={[g.Fence]:5,[g.ElectricFence]:40,[g.Wall]:500,[g.Freezer]:.5,[g.Obstructed]:500,[g.PlayerBuilding]:-10};g.Grass+"",g.Water+"",g.Stone+"",g.Wall+"",g.Spore+"",g.ElectricFence+"",g.Fence+"",g.Freezer+"",g.Obstructed+"",g.Bridge+"",g.Dirt+"",g.Sand+"",g.Snow+"",g.Ice+"",g.PlayerBuilding+"",g.Tree+"",g.Rock+"",g.Base+"",Number.EPSILON,g.Fence+"",g.ElectricFence+"",g.Wall+"",g.Tree+"",g.Rock+"",g.Obstructed+"",g.PlayerBuilding+"";const rt=[[0,-1],[-1,0],[1,0],[0,1],[-1,-1],[1,-1],[-1,1],[1,1]],ht=150;class ot{constructor(e,s=nt,i=it,n=1){M(this,"neighbors");M(this,"computedCosts");M(this,"computedMultipliers");M(this,"scaledWidth");M(this,"scaledHeight");M(this,"computedVersion",-1);this.surface=e,this.costMultipliers=s,this.costs=i,this.scale=n,this.neighbors=rt.map(([h,a])=>[h*n,a*n])}getPath(e,s,i){this.computedVersion!==this.surface.version&&this.computeCosts(),e=this.surface.getTile(Math.floor(e.getX()/this.scale)*this.scale,Math.floor(e.getY()/this.scale)*this.scale),s=this.surface.getTile(Math.floor(s.getX()/this.scale)*this.scale,Math.floor(s.getY()/this.scale)*this.scale);const n=i?k=>i(this.computedMultipliers[this.getIndex(k)],k):k=>this.computedMultipliers[this.getIndex(k)],h=new Set,o=(this.computedCosts[this.getIndex(e)]??1)*n(e),u=new Map;u.set(e.getHash(),o);const p=new Map;p.set(e.getHash(),o);const f=new Map;f.set(e.getHash(),o+this.heuristic(e,s));const S=new st((k,I)=>(f.get(k.getHash())??1/0)-(f.get(I.getHash())??1/0));S.push(e);const C=new Map;for(;!S.empty();){let k=S.pop();if(s===k)return L.fromMapAndCosts(this,e,s,C);const I=k.getHash(),m=this.neighbors.map(([r,c])=>this.surface.getTile(r+k.getX(),c+k.getY())),v=[];this.setCostAndMultiplier(0,v,n,m[0]),this.setCostAndMultiplier(1,v,n,m[1]),this.setCostAndMultiplier(2,v,n,m[2]),this.setCostAndMultiplier(3,v,n,m[3]),this.setDiagonalCostAndMultiplier(4,0,1,v,n,m[4]),this.setDiagonalCostAndMultiplier(5,0,2,v,n,m[5]),this.setDiagonalCostAndMultiplier(6,1,3,v,n,m[6]),this.setDiagonalCostAndMultiplier(7,2,3,v,n,m[7]),m.forEach((r,c)=>{if(!r)return;const l=v[c*2];if(!l||h.has(r))return;const d=r.getHash(),A=p.get(I)+v[c*2+1];if(A<(p.get(d)??1/0)){const w=u.get(I)+l;u.set(d,w),C.set(d,k),p.set(d,A),f.set(d,A+this.heuristic(r,s)),S.push(r),h.add(k)}})}}getHivePath(e,s){const i={},n=(h,a)=>(i[a.getHash()]??1)*h;return e.reduce((h,a,o)=>{const u=this.getPath(a,s,n);return h.push(u),u&&e.length>o-1&&u.getTiles().forEach(p=>{p.hasStaticEntity()&&(i[p.getHash()]=.85),i[p.getHash()]=i[p.getHash()]+.1||1.1}),h},[])}getWaypointPath(e){const s=[];for(let i=0;i<e.length-1;i++)s.push(this.getPath(e[i],e[i+1]));return L.fromPaths(this,s)}getCost(e,s){this.computedVersion!==this.surface.version&&this.computeCosts();const i=this.computedCosts[this.getIndex(e)];if(!s)return i;const n=this.computedCosts[this.getIndex(s)];if(!i||!n)return null;const h=(i+n)/2;return!i||!n||e.getX()===s.getX()||e.getY()==s.getY()?h:h+(this.computedCosts[(s.getY()/this.scale|0)*this.scaledWidth+(e.getX()/this.scale|0)]+this.computedCosts[(e.getY()/this.scale|0)*this.scaledWidth+(s.getX()/this.scale|0)])/4}getSurface(){return this.surface}heuristic(e,s){return Math.abs(e.getX()-s.getX())+Math.abs(e.getY()-s.getY())}setCostAndMultiplier(e,s,i,n){if(!n)return;const h=this.computedCosts[this.getIndex(n)];h&&(s[e*2]=h,s[e*2+1]=h*i(n))}setDiagonalCostAndMultiplier(e,s,i,n,h,a){if(!a||!n[s*2]||!n[i*2])return;const o=n[s*2+1]+n[i*2+1];if(o>ht)return;const u=this.computedCosts[this.getIndex(a)];u&&(n[e*2]=u+(n[s*2]+n[i*2])/4,n[e*2+1]=u*h(a)+o/4)}computeCosts(){this.computedVersion=this.surface.version;const e=this.scale**2;this.scaledWidth=Math.floor(this.surface.getWidth()/this.scale),this.scaledHeight=Math.floor(this.surface.getHeight()/this.scale);const s=this.scaledWidth*this.scaledHeight;this.computedCosts=new Array(s),this.computedMultipliers=new Array(s);for(let i=0;i<this.scaledWidth;i++)for(let n=0;n<this.scaledHeight;n++){const h=this.surface.getEntityTiles(i*this.scale,n*this.scale,this.scale);let a=0,o=0;for(let p=0;p<h.length;p++){let f=h[p].getType();if(!this.costs[f]){a=null,o=e;break}a+=this.costs[f],o+=this.costMultipliers[f]??1}const u=n*this.scaledWidth+i;this.computedCosts[u]=a===null?null:a/e,this.computedMultipliers[u]=o/e}}getIndex(e){return(e.getY()/this.scale|0)*this.scaledWidth+(e.getX()/this.scale|0)}}onmessage=({data:{width:t,height:e,buffer:s,costMultiplier:i,costs:n,scale:h,startPoints:a,target:o}})=>{const u=new G({width:t,height:e,buffer:new Uint8Array(s)}),p=new ot(u,i,n,h),f=a.map(({x:I,y:m})=>u.getTile(I,m)),S=u.getTile(o.x,o.y),k=p.getHivePath(f,S).filter(I=>!!I).map(I=>I.getTiles().map(m=>m.serialize()));postMessage(k)}})();
